user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # cleans up log messages a bit
    # needs to be done in the context of 'http'
    log_format main '$request $status $body_bytes_sent $http_referer';

    access_log  /var/log/nginx/access.log  main;

    charset utf-8;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay off;
    client_header_timeout 10s;
    client_body_timeout 10s;
    client_max_body_size 128k;
    reset_timedout_connection on;
    keepalive_timeout 65;

    gzip on;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        image/svg+xml;

    server {
        listen 80;
        server_name imsi;

        # Point everything to the development webpack server
        # The production build should simply serve the files from /dist
        location / {
            proxy_pass http://imsi-ui:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy api requests to the node express server
        location /api {
            proxy_pass http://imsi-api:8081;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

    }
}
